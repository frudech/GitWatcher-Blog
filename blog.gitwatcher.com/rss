<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><atom:link rel="hub" href="http://tumblr.superfeedr.com/" xmlns:atom="http://www.w3.org/2005/Atom"/><description>Blog for gitwatcher.com</description><title>GitWatcher</title><generator>Tumblr (3.0; @gitwatcher)</generator><link>http://blog.gitwatcher.com/</link><item><title>A semi-automatic categorization of GitHub projects</title><description>&lt;p&gt;&lt;span id="internal-source-marker_0.3630607402786319"&gt;After few months from launch, &lt;/span&gt;&lt;a href="http://gitwatcher.com/" title="GitWatcher helps you to Keep track of repositories your are watching on github" target="_blank"&gt;&lt;span&gt;gitwatcher.com&lt;/span&gt;&lt;/a&gt;&lt;span&gt; is slowly but constantly adding new users to the system and today, we reach the nice number of 73 active users. &lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Few but good, just like books and friends should be, right&amp;#160;? What I mean, is that all of us are skilled programmers already using &lt;a href="https://github.com/" title="GitHub is a social network for programmers." target="_blank"&gt;GitHub &lt;/a&gt;for fun and profit and now, by tagging, we are also adding a collective value too. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[[MORE]]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id="internal-source-marker_0.5350861829437262"&gt;Tagging the repositories we are watching on GitHub in the pursue of being able to find it again the next time we need it, has at first the personal value of keeping our things organized and easily findable. As secondary effect, it enables cooperative semi-automatic categorization  based on “&lt;/span&gt;&lt;a href="http://en.wikipedia.org/wiki/Folksonomy" target="_blank"&gt;&lt;span&gt;folksonomy&lt;/span&gt;&lt;/a&gt;&lt;span&gt;”.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What we are trying to get here, is a brand new “&lt;/span&gt;&lt;a href="http://gitwatcher.com/trends" title="A brand new trends page, where the best GitHub projects are listed by category. " target="_blank"&gt;&lt;span&gt;trends page&lt;/span&gt;&lt;/a&gt;&lt;span&gt;“, where the best GitHub projects are listed by category. &lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;How can we do it&amp;#160;? Despite the quite extensive literature in  “Automatic Categorization Systems” field,  gitwatcher.com wants to go easy and cooperative. &lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;It will start from a really basic kind of categorization system looking each user’s watchlist for a specific set of tags, say “ruby”, “web” and “framework” for example, then assign the relative repository to the category “Ruby Web Frameworks”. &lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Categories are currently generated by admins at gitwatcher.com, who give them a name and a minimum set of tags to be included in, but the future is open to experimenting with better, maybe more social and collaborative solutions.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;If you have any idea on how that should be done, please let me know. Add your suggestion by commenting this article and contributing to the development of the GitWatcher free platform.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;</description><link>http://blog.gitwatcher.com/post/22589388119</link><guid>http://blog.gitwatcher.com/post/22589388119</guid><pubDate>Mon, 07 May 2012 17:22:00 +0200</pubDate><category>folksonomy</category><category>collaborative tagging</category><category>social classification</category><category>social indexing</category><category>social tagging</category><category>automatic categorization</category></item><item><title>GitWatcher is built on top of several amazing Ruby Gems</title><description>&lt;p&gt;I&amp;#8217;d like to thanks one by one all the developers who contributed directly or undirectly to the amazing edge we are living in Ruby domain.&lt;/p&gt;
&lt;p&gt;Here it is a dump of Ruby Gems which GitWatcher is currently built on top of.&lt;/p&gt;
&lt;p&gt;My personal special thanks goes to &lt;a href="http://mongoid.org/" title="Mongoid (pronounced mann-goyd) is an Object-Document-Mapper (ODM) for MongoDB written in Ruby." target="_blank"&gt;MongoID&lt;/a&gt; project and in special way to &lt;a href="https://github.com/durran" target="_blank"&gt;&lt;span class="username"&gt;durran&lt;/span&gt; &lt;em&gt;(&lt;span&gt;Durran Jordan&lt;/span&gt;)&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Without his support &lt;a href="http://gitwatcher.com/" title="GitWatcher helps you to Keep track of repositories your are watching on github" target="_blank"&gt;GitWatcher&lt;/a&gt; &lt;span class="st"&gt;would&lt;/span&gt; have never been started.&lt;/p&gt;
&lt;p&gt;GIT&lt;br/&gt;  remote: &lt;a href="https://github.com/mongoid/mongoid.git" target="_blank"&gt;https://github.com/mongoid/mongoid.git&lt;/a&gt;&lt;br/&gt;  revision: 512b7107ea79721c1780890eff8eec663f381bf2&lt;br/&gt;  specs:&lt;br/&gt;    mongoid (3.0.0)&lt;br/&gt;      activemodel (~&amp;gt; 3.1)&lt;br/&gt;      mongo (~&amp;gt; 1.3)&lt;br/&gt;      tzinfo (~&amp;gt; 0.3.22)&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;[[MORE]]&lt;br/&gt;GEM&lt;br/&gt;  remote: &lt;a href="http://rubygems.org/" target="_blank"&gt;http://rubygems.org/&lt;/a&gt;&lt;br/&gt;  specs:&lt;br/&gt;    ZenTest (4.6.2)&lt;br/&gt;    actionmailer (3.2.2)&lt;br/&gt;      actionpack (= 3.2.2)&lt;br/&gt;      mail (~&amp;gt; 2.4.0)&lt;br/&gt;    actionpack (3.2.2)&lt;br/&gt;      activemodel (= 3.2.2)&lt;br/&gt;      activesupport (= 3.2.2)&lt;br/&gt;      builder (~&amp;gt; 3.0.0)&lt;br/&gt;      erubis (~&amp;gt; 2.7.0)&lt;br/&gt;      journey (~&amp;gt; 1.0.1)&lt;br/&gt;      rack (~&amp;gt; 1.4.0)&lt;br/&gt;      rack-cache (~&amp;gt; 1.1)&lt;br/&gt;      rack-test (~&amp;gt; 0.6.1)&lt;br/&gt;      sprockets (~&amp;gt; 2.1.2)&lt;br/&gt;    activemodel (3.2.2)&lt;br/&gt;      activesupport (= 3.2.2)&lt;br/&gt;      builder (~&amp;gt; 3.0.0)&lt;br/&gt;    activerecord (3.2.2)&lt;br/&gt;      activemodel (= 3.2.2)&lt;br/&gt;      activesupport (= 3.2.2)&lt;br/&gt;      arel (~&amp;gt; 3.0.2)&lt;br/&gt;      tzinfo (~&amp;gt; 0.3.29)&lt;br/&gt;    activeresource (3.2.2)&lt;br/&gt;      activemodel (= 3.2.2)&lt;br/&gt;      activesupport (= 3.2.2)&lt;br/&gt;    activesupport (3.2.2)&lt;br/&gt;      i18n (~&amp;gt; 0.6)&lt;br/&gt;      multi_json (~&amp;gt; 1.0)&lt;br/&gt;    addressable (2.2.7)&lt;br/&gt;    archive-tar-minitar (0.5.2)&lt;br/&gt;    arel (3.0.2)&lt;br/&gt;    autotest-notification (2.3.4)&lt;br/&gt;      autotest-standalone (~&amp;gt; 4.5)&lt;br/&gt;    autotest-rails (4.1.2)&lt;br/&gt;      ZenTest (~&amp;gt; 4.5)&lt;br/&gt;    autotest-standalone (4.5.9)&lt;br/&gt;    bson (1.6.1)&lt;br/&gt;    bson_ext (1.6.1)&lt;br/&gt;      bson (~&amp;gt; 1.6.1)&lt;br/&gt;    builder (3.0.0)&lt;br/&gt;    capybara (1.1.2)&lt;br/&gt;      mime-types (&amp;gt;= 1.16)&lt;br/&gt;      nokogiri (&amp;gt;= 1.3.3)&lt;br/&gt;      rack (&amp;gt;= 1.0.0)&lt;br/&gt;      rack-test (&amp;gt;= 0.5.4)&lt;br/&gt;      selenium-webdriver (~&amp;gt; 2.0)&lt;br/&gt;      xpath (~&amp;gt; 0.1.4)&lt;br/&gt;    childprocess (0.3.1)&lt;br/&gt;      ffi (~&amp;gt; 1.0.6)&lt;br/&gt;    chronic (0.6.7)&lt;br/&gt;    coffee-rails (3.2.2)&lt;br/&gt;      coffee-script (&amp;gt;= 2.2.0)&lt;br/&gt;      railties (~&amp;gt; 3.2.0)&lt;br/&gt;    coffee-script (2.2.0)&lt;br/&gt;      coffee-script-source&lt;br/&gt;      execjs&lt;br/&gt;    coffee-script-source (1.2.0)&lt;br/&gt;    columnize (0.3.6)&lt;br/&gt;    commonjs (0.2.0)&lt;br/&gt;      therubyracer (~&amp;gt; 0.9.9)&lt;br/&gt;    cucumber (1.1.9)&lt;br/&gt;      builder (&amp;gt;= 2.1.2)&lt;br/&gt;      diff-lcs (&amp;gt;= 1.1.2)&lt;br/&gt;      gherkin (~&amp;gt; 2.9.0)&lt;br/&gt;      json (&amp;gt;= 1.4.6)&lt;br/&gt;      term-ansicolor (&amp;gt;= 1.0.6)&lt;br/&gt;    cucumber-rails (1.3.0)&lt;br/&gt;      capybara (&amp;gt;= 1.1.2)&lt;br/&gt;      cucumber (&amp;gt;= 1.1.8)&lt;br/&gt;      nokogiri (&amp;gt;= 1.5.0)&lt;br/&gt;    daemons (1.0.10)&lt;br/&gt;    dalli (1.1.5)&lt;br/&gt;    database_cleaner (0.7.1)&lt;br/&gt;    diff-lcs (1.1.3)&lt;br/&gt;    em-websocket (0.3.6)&lt;br/&gt;      addressable (&amp;gt;= 2.1.1)&lt;br/&gt;      eventmachine (&amp;gt;= 0.12.9)&lt;br/&gt;    erubis (2.7.0)&lt;br/&gt;    eventmachine (0.12.10)&lt;br/&gt;    execjs (1.3.0)&lt;br/&gt;      multi_json (~&amp;gt; 1.0)&lt;br/&gt;    factory_girl (2.6.3)&lt;br/&gt;      activesupport (&amp;gt;= 2.3.9)&lt;br/&gt;    factory_girl_rails (1.7.0)&lt;br/&gt;      factory_girl (~&amp;gt; 2.6.0)&lt;br/&gt;      railties (&amp;gt;= 3.0.0)&lt;br/&gt;    faraday (0.7.6)&lt;br/&gt;      addressable (~&amp;gt; 2.2)&lt;br/&gt;      multipart-post (~&amp;gt; 1.1)&lt;br/&gt;      rack (~&amp;gt; 1.1)&lt;br/&gt;    faraday-stack (0.1.5)&lt;br/&gt;      faraday (&amp;gt;= 0.6, &amp;lt; 0.8)&lt;br/&gt;    ffi (1.0.11)&lt;br/&gt;    gem_plugin (0.2.3)&lt;br/&gt;    gherkin (2.9.0)&lt;br/&gt;      json (&amp;gt;= 1.4.6)&lt;br/&gt;    git (1.2.5)&lt;br/&gt;    google_visualr (2.1.2)&lt;br/&gt;    guard (1.0.1)&lt;br/&gt;      ffi (&amp;gt;= 0.5.0)&lt;br/&gt;      thor (~&amp;gt; 0.14.6)&lt;br/&gt;    guard-bundler (0.1.3)&lt;br/&gt;      bundler (&amp;gt;= 1.0.0)&lt;br/&gt;      guard (&amp;gt;= 0.2.2)&lt;br/&gt;    guard-cucumber (0.7.5)&lt;br/&gt;      cucumber (&amp;gt;= 0.10)&lt;br/&gt;      guard (&amp;gt;= 0.8.3)&lt;br/&gt;    guard-livereload (0.4.2)&lt;br/&gt;      em-websocket (&amp;gt;= 0.2.0)&lt;br/&gt;      guard (&amp;gt;= 0.10.0)&lt;br/&gt;      multi_json (~&amp;gt; 1.0)&lt;br/&gt;    guard-rails (0.1.0)&lt;br/&gt;      guard (&amp;gt;= 0.2.2)&lt;br/&gt;    guard-rspec (0.6.0)&lt;br/&gt;      guard (&amp;gt;= 0.10.0)&lt;br/&gt;    guard-spork (0.5.2)&lt;br/&gt;      guard (&amp;gt;= 0.10.0)&lt;br/&gt;      spork (&amp;gt;= 0.8.4)&lt;br/&gt;    haml (3.1.4)&lt;br/&gt;    haml-rails (0.3.4)&lt;br/&gt;      actionpack (~&amp;gt; 3.0)&lt;br/&gt;      activesupport (~&amp;gt; 3.0)&lt;br/&gt;      haml (~&amp;gt; 3.0)&lt;br/&gt;      railties (~&amp;gt; 3.0)&lt;br/&gt;    hashie (1.2.0)&lt;br/&gt;    hike (1.2.1)&lt;br/&gt;    httparty (0.8.1)&lt;br/&gt;      multi_json&lt;br/&gt;      multi_xml&lt;br/&gt;    i18n (0.6.0)&lt;br/&gt;    jar_wrapper (0.1.2)&lt;br/&gt;      jeweler&lt;br/&gt;      jeweler&lt;br/&gt;      zip&lt;br/&gt;      zip&lt;br/&gt;    jeweler (1.8.3)&lt;br/&gt;      bundler (~&amp;gt; 1.0)&lt;br/&gt;      git (&amp;gt;= 1.2.5)&lt;br/&gt;      rake&lt;br/&gt;      rdoc&lt;br/&gt;    journey (1.0.3)&lt;br/&gt;    jquery-rails (2.0.1)&lt;br/&gt;      railties (&amp;gt;= 3.2.0, &amp;lt; 5.0)&lt;br/&gt;      thor (~&amp;gt; 0.14)&lt;br/&gt;    json (1.6.5)&lt;br/&gt;    kaminari (0.13.0)&lt;br/&gt;      actionpack (&amp;gt;= 3.0.0)&lt;br/&gt;      activesupport (&amp;gt;= 3.0.0)&lt;br/&gt;      railties (&amp;gt;= 3.0.0)&lt;br/&gt;    launchy (2.0.5)&lt;br/&gt;      addressable (~&amp;gt; 2.2.6)&lt;br/&gt;    less (2.0.10)&lt;br/&gt;      commonjs (~&amp;gt; 0.2.0)&lt;br/&gt;      therubyracer (~&amp;gt; 0.9.9)&lt;br/&gt;    less-rails (2.1.7)&lt;br/&gt;      actionpack (&amp;gt;= 3.1)&lt;br/&gt;      less (~&amp;gt; 2.0.7)&lt;br/&gt;    libnotify (0.7.2)&lt;br/&gt;    libv8 (3.3.10.4)&lt;br/&gt;    linecache19 (0.5.12)&lt;br/&gt;      ruby_core_source (&amp;gt;= 0.1.4)&lt;br/&gt;    mail (2.4.3)&lt;br/&gt;      i18n (&amp;gt;= 0.4.0)&lt;br/&gt;      mime-types (~&amp;gt; 1.16)&lt;br/&gt;      treetop (~&amp;gt; 1.4.8)&lt;br/&gt;    meta-tags (1.2.6)&lt;br/&gt;      actionpack&lt;br/&gt;    mime-types (1.17.2)&lt;br/&gt;    mongo (1.6.1)&lt;br/&gt;      bson (~&amp;gt; 1.6.1)&lt;br/&gt;    mongoid_taggable_with_context (0.8.0)&lt;br/&gt;      mongoid (&amp;gt;= 2.0.0)&lt;br/&gt;    mongrel (1.2.0.pre2)&lt;br/&gt;      daemons (~&amp;gt; 1.0.10)&lt;br/&gt;      gem_plugin (~&amp;gt; 0.2.3)&lt;br/&gt;    multi_json (1.1.0)&lt;br/&gt;    multi_xml (0.4.1)&lt;br/&gt;    multipart-post (1.1.5)&lt;br/&gt;    nokogiri (1.5.2)&lt;br/&gt;    oauth2 (0.5.2)&lt;br/&gt;      faraday (~&amp;gt; 0.7)&lt;br/&gt;      multi_json (~&amp;gt; 1.0)&lt;br/&gt;    omniauth (1.0.3)&lt;br/&gt;      hashie (~&amp;gt; 1.2)&lt;br/&gt;      rack&lt;br/&gt;    omniauth-github (1.0.1)&lt;br/&gt;      omniauth (~&amp;gt; 1.0)&lt;br/&gt;      omniauth-oauth2 (~&amp;gt; 1.0)&lt;br/&gt;    omniauth-oauth2 (1.0.0)&lt;br/&gt;      oauth2 (~&amp;gt; 0.5.0)&lt;br/&gt;      omniauth (~&amp;gt; 1.0)&lt;br/&gt;    pg (0.13.2)&lt;br/&gt;    polyglot (0.3.3)&lt;br/&gt;    progstr-ruby (1.0.6)&lt;br/&gt;      multi_json&lt;br/&gt;    rack (1.4.1)&lt;br/&gt;    rack-cache (1.2)&lt;br/&gt;      rack (&amp;gt;= 0.4)&lt;br/&gt;    rack-ssl (1.3.2)&lt;br/&gt;      rack&lt;br/&gt;    rack-test (0.6.1)&lt;br/&gt;      rack (&amp;gt;= 1.0)&lt;br/&gt;    rails (3.2.2)&lt;br/&gt;      actionmailer (= 3.2.2)&lt;br/&gt;      actionpack (= 3.2.2)&lt;br/&gt;      activerecord (= 3.2.2)&lt;br/&gt;      activeresource (= 3.2.2)&lt;br/&gt;      activesupport (= 3.2.2)&lt;br/&gt;      bundler (~&amp;gt; 1.0)&lt;br/&gt;      railties (= 3.2.2)&lt;br/&gt;    railties (3.2.2)&lt;br/&gt;      actionpack (= 3.2.2)&lt;br/&gt;      activesupport (= 3.2.2)&lt;br/&gt;      rack-ssl (~&amp;gt; 1.3.2)&lt;br/&gt;      rake (&amp;gt;= 0.8.7)&lt;br/&gt;      rdoc (~&amp;gt; 3.4)&lt;br/&gt;      thor (~&amp;gt; 0.14.6)&lt;br/&gt;    rake (0.9.2.2)&lt;br/&gt;    rb-inotify (0.8.8)&lt;br/&gt;      ffi (&amp;gt;= 0.5.0)&lt;br/&gt;    rdoc (3.12)&lt;br/&gt;      json (~&amp;gt; 1.4)&lt;br/&gt;    rspec (2.8.0)&lt;br/&gt;      rspec-core (~&amp;gt; 2.8.0)&lt;br/&gt;      rspec-expectations (~&amp;gt; 2.8.0)&lt;br/&gt;      rspec-mocks (~&amp;gt; 2.8.0)&lt;br/&gt;    rspec-core (2.8.0)&lt;br/&gt;    rspec-expectations (2.8.0)&lt;br/&gt;      diff-lcs (~&amp;gt; 1.1.2)&lt;br/&gt;    rspec-mocks (2.8.0)&lt;br/&gt;    rspec-rails (2.8.1)&lt;br/&gt;      actionpack (&amp;gt;= 3.0)&lt;br/&gt;      activesupport (&amp;gt;= 3.0)&lt;br/&gt;      railties (&amp;gt;= 3.0)&lt;br/&gt;      rspec (~&amp;gt; 2.8.0)&lt;br/&gt;    ruby-debug-base19 (0.11.25)&lt;br/&gt;      columnize (&amp;gt;= 0.3.1)&lt;br/&gt;      linecache19 (&amp;gt;= 0.5.11)&lt;br/&gt;      ruby_core_source (&amp;gt;= 0.1.4)&lt;br/&gt;    ruby-debug19 (0.11.6)&lt;br/&gt;      columnize (&amp;gt;= 0.3.1)&lt;br/&gt;      linecache19 (&amp;gt;= 0.5.11)&lt;br/&gt;      ruby-debug-base19 (&amp;gt;= 0.11.19)&lt;br/&gt;    ruby_core_source (0.1.5)&lt;br/&gt;      archive-tar-minitar (&amp;gt;= 0.5.2)&lt;br/&gt;    rubyzip (0.9.6.1)&lt;br/&gt;    sass (3.1.15)&lt;br/&gt;    sass-rails (3.2.4)&lt;br/&gt;      railties (~&amp;gt; 3.2.0)&lt;br/&gt;      sass (&amp;gt;= 3.1.10)&lt;br/&gt;      tilt (~&amp;gt; 1.3)&lt;br/&gt;    search_magic (0.3.0)&lt;br/&gt;      chronic&lt;br/&gt;      mongoid (&amp;gt;= 2.4.3)&lt;br/&gt;    selenium (0.2.5)&lt;br/&gt;      jar_wrapper&lt;br/&gt;      jeweler&lt;br/&gt;    selenium-client (1.2.18)&lt;br/&gt;    selenium-webdriver (2.20.0)&lt;br/&gt;      childprocess (&amp;gt;= 0.2.5)&lt;br/&gt;      ffi (~&amp;gt; 1.0)&lt;br/&gt;      multi_json (~&amp;gt; 1.0)&lt;br/&gt;      rubyzip&lt;br/&gt;    spork (0.9.0)&lt;br/&gt;    sprockets (2.1.2)&lt;br/&gt;      hike (~&amp;gt; 1.2)&lt;br/&gt;      rack (~&amp;gt; 1.0)&lt;br/&gt;      tilt (~&amp;gt; 1.1,&amp;#160;!= 1.3.0)&lt;br/&gt;    sqlite3 (1.3.5)&lt;br/&gt;    stathat (0.0.3)&lt;br/&gt;    systemu (2.4.2)&lt;br/&gt;    term-ansicolor (1.0.7)&lt;br/&gt;    therubyracer (0.9.10)&lt;br/&gt;      libv8 (~&amp;gt; 3.3.10)&lt;br/&gt;    thin (1.3.1)&lt;br/&gt;      daemons (&amp;gt;= 1.0.9)&lt;br/&gt;      eventmachine (&amp;gt;= 0.12.6)&lt;br/&gt;      rack (&amp;gt;= 1.0.0)&lt;br/&gt;    thor (0.14.6)&lt;br/&gt;    tilt (1.3.3)&lt;br/&gt;    treetop (1.4.10)&lt;br/&gt;      polyglot&lt;br/&gt;      polyglot (&amp;gt;= 0.3.1)&lt;br/&gt;    twitter-bootstrap-rails (2.0.1)&lt;br/&gt;      actionpack (&amp;gt;= 3.1)&lt;br/&gt;      less-rails (~&amp;gt; 2.1.5)&lt;br/&gt;      railties (&amp;gt;= 3.1)&lt;br/&gt;    tzinfo (0.3.32)&lt;br/&gt;    uglifier (1.2.3)&lt;br/&gt;      execjs (&amp;gt;= 0.3.0)&lt;br/&gt;      multi_json (&amp;gt;= 1.0.2)&lt;br/&gt;    xpath (0.1.4)&lt;br/&gt;      nokogiri (~&amp;gt; 1.3)&lt;br/&gt;    zip (2.0.2)&lt;br/&gt;&lt;br/&gt;PLATFORMS&lt;br/&gt;  ruby&lt;br/&gt;&lt;br/&gt;DEPENDENCIES&lt;br/&gt;  ZenTest&lt;br/&gt;  autotest-notification&lt;br/&gt;  autotest-rails&lt;br/&gt;  bson&lt;br/&gt;  bson_ext&lt;br/&gt;  builder&lt;br/&gt;  capybara&lt;br/&gt;  coffee-rails&lt;br/&gt;  cucumber&lt;br/&gt;  cucumber-rails&lt;br/&gt;  dalli&lt;br/&gt;  database_cleaner&lt;br/&gt;  factory_girl_rails&lt;br/&gt;  faraday-stack&lt;br/&gt;  google_visualr&lt;br/&gt;  guard-bundler&lt;br/&gt;  guard-cucumber&lt;br/&gt;  guard-livereload&lt;br/&gt;  guard-rails&lt;br/&gt;  guard-rspec&lt;br/&gt;  guard-spork&lt;br/&gt;  haml&lt;br/&gt;  haml-rails&lt;br/&gt;  httparty&lt;br/&gt;  jquery-rails&lt;br/&gt;  kaminari&lt;br/&gt;  launchy&lt;br/&gt;  libnotify&lt;br/&gt;  meta-tags&lt;br/&gt;  mongo&lt;br/&gt;  mongoid!&lt;br/&gt;  mongoid_taggable_with_context (= 0.8.0)&lt;br/&gt;  mongrel (= 1.2.0.pre2)&lt;br/&gt;  omniauth&lt;br/&gt;  omniauth-github&lt;br/&gt;  pg&lt;br/&gt;  progstr-ruby&lt;br/&gt;  rack&lt;br/&gt;  rails (= 3.2.2)&lt;br/&gt;  rake&lt;br/&gt;  rb-inotify&lt;br/&gt;  rspec-rails&lt;br/&gt;  ruby-debug19&lt;br/&gt;  sass-rails&lt;br/&gt;  search_magic&lt;br/&gt;  selenium&lt;br/&gt;  selenium-client&lt;br/&gt;  selenium-webdriver&lt;br/&gt;  sqlite3&lt;br/&gt;  stathat&lt;br/&gt;  systemu&lt;br/&gt;  therubyracer&lt;br/&gt;  thin&lt;br/&gt;  twitter-bootstrap-rails (~&amp;gt; 2.0.1.0)&lt;br/&gt;  uglifier&lt;/p&gt;</description><link>http://blog.gitwatcher.com/post/19857185500</link><guid>http://blog.gitwatcher.com/post/19857185500</guid><pubDate>Sat, 24 Mar 2012 23:17:00 +0100</pubDate><category>gem</category><category>mongoid</category><category>greetings</category><category>Durran-Jordan</category></item><item><title>Simple full-text search engine for repository watchlist</title><description>&lt;p&gt;&lt;span id="internal-source-marker_0.7034602681137719"&gt;Many of you have been asking for this since the beginning. Today, I have the pleasure to announce that full-text search engine for your repository watchlist, is finally here. &lt;/span&gt;&lt;br/&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;span&gt;People who are watching several hundred of GitHub repositories like me, after login the first time, get a big list of untagged git projects and starting tagging could be a bit tricky.&lt;/span&gt;&lt;br/&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;span&gt;Even if you can reorder your pages sorting by fields, ‘By Tag’ &lt;/span&gt;&lt;span&gt;tab &lt;/span&gt;&lt;span&gt;in your &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;dasboard is still empty and you may have several pages to go through, that’s way a search engine became essential.&lt;/span&gt;[[MORE]]&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are many open source full-text search engines like &lt;/span&gt;&lt;a href="http://www.elasticsearch.org/" title="Elasticsearch - fulltext search engine for nosql databases - open source" target="_blank"&gt;elasticsearch&lt;/a&gt;&lt;span&gt; and &lt;a href="http://sphinxsearch.com/" title="Sphinx - open source full-text search engine" target="_blank"&gt;sphinx&lt;/a&gt; with relative &lt;/span&gt;Ruby API and DSL&lt;span&gt;  like &lt;a href="http://karmi.github.com/tire/" title="Tire -Ruby API &amp;amp; DSL, with full Rails ActiveModel compatibility and mongoid integration search engine/database" target="_blank"&gt;Tire&lt;/a&gt; / &lt;/span&gt;&lt;a href="https://github.com/cousine/mebla" title="Mebla is an elasticsearch wrapper for Mongoid based on Slingshot." target="_blank"&gt;Mebla&lt;/a&gt;&lt;span&gt; and&lt;/span&gt;&lt;a href="https://github.com/redbeard-tech/mongoid-sphinx" title="mongoid-sphinx - full text indexing extension for MongoDB using Sphinx and Mongoid " target="_blank"&gt;mongoid-sphinx&lt;/a&gt;, &lt;span class="st"&gt;but we have two constraints here&lt;/span&gt;&lt;span&gt;:&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;a mongoid &lt;a href="http://mongoid.org/docs/relations/embedded/1-n.html" rel="nofollow" target="_blank"&gt;embedded one to many&lt;/a&gt; model on Rails 3.1 to search full text&lt;/li&gt;
&lt;li&gt;deploy on heroku without having to pay for add-ons, initially&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;All heroku Full-Text Search add-ons currently, seem to have just paying plans which are not good to start with, see &lt;a href="http://addons.heroku.com/flying_sphinx" title="Flying Sphinx is an add-on for Heroku that allows you to harness the power and speed of the Sphinx full-text search tool." target="_blank"&gt;Flying Sphinx&lt;/a&gt; and &lt;a href="http://addons.heroku.com/websolr" title="Websolr by onemorecloud brings you the power of Solr as an easy-to-use service" target="_blank"&gt;Websolr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is also &lt;a href="http://addons.heroku.com/searchify" title="( Beta )  Searchify IndexTank  Awesome hosted search made easy. True real-time, customizable full-text search" target="_blank"&gt;Searchify IndexTank&lt;/a&gt; but is currently &lt;span&gt;Beta, then for our pourpose we decided to go even simpler &lt;/span&gt;&lt;span&gt;using &lt;a href="https://github.com/joshuabowers/search_magic" title="SearchMagic provides scoped full text search and sort capabilities to Mongoid documents" target="_blank"&gt;search_magic&lt;/a&gt; gem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We tried &lt;a href="https://github.com/mauriciozaffari/mongoid_search" title="Simple full text search for Mongoid ORM" target="_blank"&gt;mongoid_search&lt;/a&gt; and &lt;a href="https://github.com/aaw/mongoid_fulltext" title="A full-text search implementation for the Mongoid ODM" target="_blank"&gt;mongoid_fulltext&lt;/a&gt; too, but we have not been able to make them working with mongoid &lt;a href="http://mongoid.org/docs/relations/embedded/1-n.html" rel="nofollow" target="_blank"&gt;embedded one to many&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That said, the search is very simple and restrictive&amp;#160;: you insert a set of words and it match a permutation of the exact terms only, case unsensitive,  looking full-text into &amp;#8220;repo&amp;#8221;, &amp;#8220;description&amp;#8221; and &amp;#8220;tags&amp;#8221; &lt;/span&gt;&lt;span&gt;fields &lt;/span&gt;&lt;span&gt; of each repository, which means that in my case, searching for&lt;em&gt; &amp;#8220;authentication omniath&amp;#8221; &lt;/em&gt;will find the following five responces&amp;#160;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id="internal-source-marker_0.7034602681137719"&gt;&lt;img align="middle" height="313" src="http://media.tumblr.com/tumblr_lyhebrQXmj1r5qp5l.png" width="496"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;but searching for &lt;em&gt;&amp;#8220;rack &lt;/em&gt;&lt;span&gt;&lt;em&gt;authentication omniath&amp;#8221;&lt;/em&gt; &lt;/span&gt;&lt;span class="st"&gt; gets back&lt;/span&gt;&lt;span&gt;  just one &lt;/span&gt;&lt;span&gt;responce&lt;/span&gt;&lt;span&gt;, as you can see&amp;#160;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src="http://media.tumblr.com/tumblr_lyhecavJ7m1r5qp5l.png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="st"&gt;Very simple, but is what we need at the moment. Any feedback is welcome.&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;</description><link>http://blog.gitwatcher.com/post/16887303355</link><guid>http://blog.gitwatcher.com/post/16887303355</guid><pubDate>Thu, 02 Feb 2012 00:28:00 +0100</pubDate><category>search</category><category>full-text mongodb mongoid</category></item><item><title>Migrating MongoDB between cloud-based providers </title><description>&lt;p&gt;&lt;a href="http://gitwatcher.com/" title="GitWatcher helps you to Keep track of repositories your are watching on github" target="_blank"&gt;GitWatcher&lt;/a&gt; is an experimental platform currently based on Rails 3.1.3 and MongoDB/&lt;a href="http://mongoid.org/" target="_blank"&gt;Mongoid&lt;/a&gt;, one of the most promising pairs of Object-Document-Mapper for NoSQL DBs, in the Ruby landscape.&lt;/p&gt;
&lt;p&gt;While the backend is on a cloud, the frontend is on another. Infact, the Rails app is running on Heroku Celadon Cedar Stack and the DB was initially running on &lt;a href="https://mongohq.com/home" target="_blank"&gt;MongoHQ&lt;/a&gt;, a cloud-based hosted database solution for &lt;a href="http://www.mongodb.org/" target="_blank"&gt;MongoDB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Although that was fine at the beginning when only a few data were collected, free plan with 16MB of storage, can quickly become a shortage while you still need to go on testing, maintaining low cost of exercise at the same time but, magic of cloud computing competition, we can have a free plan for up to 240MB also.&lt;!-- more --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.heroku.com/" target="_blank"&gt;Heroku&lt;/a&gt; Platform as a Service (PaaS), provide many add-ons to easily plug in external services like &lt;a href="https://mongolab.com/home" target="_blank"&gt;MongLab&lt;/a&gt; for exsample, which currently have a free plan 15 times greater than MongoHQ, to go on testing for free with MongoDB.&lt;/p&gt;
&lt;p&gt;So here we go, migrating between clouds should never be easier, let me show you.&lt;/p&gt;
&lt;p&gt;First we add Heroku addons to our application. You can do it either through the  web console  or through the command line interface ( see &lt;a href="http://devcenter.heroku.com/articles/managing-add-ons" target="_blank"&gt;managing-add-ons&lt;/a&gt; for more details )&amp;#160;:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;$ # ADD HEROKU ADDONS:&lt;br/&gt;$ heroku addons:add mongolab:starter&lt;/pre&gt;
&lt;p&gt;than we query Heroku config to get MongoHQ connection user and password for current application&amp;#160;:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;$ # QUERY HEROKU CONFIG:&lt;br/&gt;$ heroku config --long | grep MONGOHQ_URL &lt;br/&gt;MONGOHQ_URL =&amp;gt; mongodb://&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@staff.mongohq.com:10075/app1707530&lt;/pre&gt;
&lt;p&gt;now we dump MongoDB from MongoHQ&amp;#160;:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;$ # DUMP MongoHQ DB:&lt;br/&gt;$ mongodump -h staff.mongohq.com:10075 -d app1707530 -u user -p&lt;span&gt; password&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt; &lt;br/&gt;connected to: staff.mongohq.com:10075&lt;br/&gt;DATABASE: app1707530     to     dump/app1707530&lt;br/&gt;        app1707530.system.users to dump/app1707530/system.users.bson&lt;br/&gt;                 1 objects&lt;br/&gt;        app1707530.system.indexes to dump/app1707530/system.indexes.bson&lt;br/&gt;                 2 objects&lt;br/&gt;        app1707530.users to dump/app1707530/users.bson&lt;br/&gt;                 2 objects&lt;br/&gt;...&lt;/pre&gt;
&lt;p&gt;and we restore the DB on MongoLab, after extracting user and password the same way we did before&amp;#160;:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;$ # RESTORE ON MongoLab:&lt;br/&gt;$ mongorestore -h ds029257.mongolab.com:29257 -d gitwatcher-db -u user -p password ./dump/app1707530&lt;br/&gt;connected to: ds029257.mongolab.com:29257&lt;br/&gt;Wed Jan 11 23:05:17 ./dump/app1707530/users.bson&lt;br/&gt;Wed Jan 11 23:05:17      going into namespace [gitwatcher-db.users]&lt;br/&gt;Wed Jan 11 23:05:24      2 objects found&lt;br/&gt;Wed Jan 11 23:05:24 ./dump/app1707530/system.users.bson&lt;br/&gt;Wed Jan 11 23:05:24      going into namespace [gitwatcher-db.system.users]&lt;br/&gt;Wed Jan 11 23:05:24      1 objects found&lt;br/&gt;Wed Jan 11 23:05:24 ./dump/app1707530/system.indexes.bson&lt;br/&gt;Wed Jan 11 23:05:24      going into namespace [gitwatcher-db.system.indexes]&lt;br/&gt;Wed Jan 11 23:05:24      2 objects found&lt;br/&gt;...&lt;/pre&gt;
&lt;p&gt;last, change production configuration in config/mongoid.yml, which should look like the following&amp;#160;:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;production:
 uri: &amp;lt;%= ENV['MONGOLAB_URI'] %&amp;gt;  
&lt;/pre&gt;
&lt;p&gt;just remain to commit and push back to Heroku.&lt;/p&gt;
&lt;p&gt;Done in 10 minutes.&lt;/p&gt;
&lt;p&gt;We did it online but, if you are under heavy DB load, is better to disable access to your application for some length of time.&lt;/p&gt;
&lt;p&gt;You can use Heroku’s built in &lt;a href="https://devcenter.heroku.com/articles/maintenance-mode" title="Maintenance Mode: it will serve a static page to all visitors, while still allowing you to run one-off processes or console commands." target="_blank"&gt;maintenance&lt;/a&gt; mode. It will serve a static page to all visitors, while still allowing you to run rake tasks or console commands.&lt;/p&gt;
&lt;p&gt;&lt;span class="st"&gt;It&amp;#8217;s great isn&amp;#8217;t it&lt;/span&gt;&amp;#160;? Let me know what you think about.&lt;/p&gt;</description><link>http://blog.gitwatcher.com/post/16431374851</link><guid>http://blog.gitwatcher.com/post/16431374851</guid><pubDate>Wed, 25 Jan 2012 00:35:00 +0100</pubDate><category>cloud operation mongodb</category></item><item><title>GitWatcher helps you to stay on top of github trending projects</title><description>&lt;p&gt;&lt;span&gt;Almost daily an interesting project appears on GitHub and you want to keep track of it because you know, sooner or later you will have to get ride of a similar problem in your own work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then you hit the watch button and in a blink of eyes, &lt;/span&gt;your &amp;#8220;Watched Repositories&amp;#8221; list, grows to the point it will be very difficult looking for something when you will have to ( my own&lt;span class="st"&gt; list count 1641 repos, today ).&lt;a id="github-watch-list" name="github-watch-list"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="st"&gt;That&amp;#8217;s the way &lt;/span&gt;&lt;span class="st"&gt; &lt;/span&gt;GitWatcher&lt;span class="st"&gt; has been thought,&lt;/span&gt; sync and watch your github watch-list is just a matter of &amp;#8220;&lt;a href="http://gitwatcher.com/auth/github" title='"sign in"' target="_blank"&gt;sign in&lt;/a&gt;&amp;#8221;, if you already have a GitHub account, infact, it utilize GitHub as authentication system provider.&lt;!-- more --&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://media.tumblr.com/tumblr_lxdj63p5xr1r5qp5l.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="tag-github-repository" name="tag-github-repository"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now you are logged in and you will see the list of all repositories you are watching on GitHub. &lt;span id="internal-source-marker_0.7607371137316099"&gt;Then you can assign an arbitrary tag (or multiple) to any repository, being able to find it again the next time you need it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src="http://media.tumblr.com/tumblr_lxngtnvDZ01r5qp5l.png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="st"&gt;By clicking on the respective column header&lt;/span&gt;&lt;span&gt;, you can also reorder your list, sorting by number of watchers, by number of forks, by creating date or by pushing date. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That is very useful coupled with &amp;#8220;tag categorization&amp;#8221; which I will explain in a minute, because it gives you the dimension of popularity in a given field.&lt;a id="github-tag-categorization" name="github-tag-categorization"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; Let me explain. By adding tags to a repositories, the system will also fill a &lt;/span&gt;&lt;span&gt;categorization tab dropdown called &amp;#8220;By Tag&amp;#8221;. Next time you reload the page, you will be able to display just the repositories tagged with &amp;#8220;css3&amp;#8221;, for example ( see following image ).&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src="http://media.tumblr.com/tumblr_lxe6d8a0x91r5qp5l.png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;At this point, sorting by number of watchers you can have a quick filling of the cascading interest the community is &lt;span class="st"&gt;falling down&lt;/span&gt; &amp;#8220;&lt;a href="http://twitter.github.com/bootstrap/" target="_blank"&gt;Twitter Bootstrap&lt;/a&gt;&amp;#8221;, for example, in comparison to other CSS3/JS/HTML5 frameworks, as  you can see.&lt;/p&gt;
&lt;p&gt;Than you sort the same CSS3 set&lt;span&gt; by pushing date &lt;/span&gt;and you can have an idea if a repository is still active and fresh and so on.&lt;/p&gt;
&lt;p&gt;The value added here, is that you can directly compare projects &lt;span class="st"&gt; competing in the same field, &lt;/span&gt;&lt;span&gt;in a blink of eyes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;span id="internal-source-marker_0.04133508664347596"&gt;But remember, &lt;a href="http://gitwatcher.com/" title="GitWatcher helps you to Keep track of repositories your are watching on github" target="_blank"&gt;GitWatcher&lt;/a&gt; is very experimental, work in progress, spare time project and moreover it is free. Anyone can contribute at any level of knowledge, please start by commenting this article or &lt;/span&gt;&lt;span class="st"&gt;send me your feedback on Twitter&lt;/span&gt;&lt;span id="internal-source-marker_0.04133508664347596"&gt; to &lt;a href="https://twitter.com/#!/gitwatcher" title="@gitwatcher" target="_blank"&gt;@&lt;/a&gt;&lt;/span&gt;&lt;a href="https://twitter.com/#!/gitwatcher" title="@gitwatcher" target="_blank"&gt;&lt;span class="js-username"&gt;&lt;span class="screen-name"&gt;gitwatcher&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="js-username"&gt;&lt;span class="screen-name"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</description><link>http://blog.gitwatcher.com/post/15460596300</link><guid>http://blog.gitwatcher.com/post/15460596300</guid><pubDate>Sat, 07 Jan 2012 19:24:00 +0100</pubDate><category>gitwatchr</category></item></channel></rss>
